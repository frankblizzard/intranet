- hour ||= Hour.new
= simple_form_for hour, :remote => false do |f|
  = f.hidden_field :user_id, :value => session[:hour_user_id] ? session[:hour_user_id] : current_user.id
  = f.input :date, :as => :string, :value =>  Date.today.strftime("%Y-%m-%d")
  = f.input :amount, :label => "Hours"
  = f.input :description, :rows => 5, :cols => 20, :onfocus => 'this.select()'
  = f.input :extra, :label_html => { :class => 'extra' }
  = f.input :holiday, :label_html => { :class => 'holiday' }
  = f.input :ill, :label_html => { :class => 'ill' }
  = f.input :public_holiday, :label_html => { :class => 'public_holiday' }
  = f.input :comp_time, :label_html => { :class => 'comp_time' }
  = f.hidden_field :project_id, :id => "real_project_id"
  %br.clear
  -unless hour.new_record?
    .input.text= link_to hour.project.name_number, hour.project, :class => 'blue'
  .input.text.required
    %label.string.optional Project
    %br
    = autocomplete_field_tag 'fake_project', '', autocomplete_project_name_hours_path, :update_elements => {:id => '#real_project_id'}, :class => "required"
    %span.hint Type Nr. or Name, will autocomplete
    .tasks_hour_fields
      =f.grouped_collection_select :task_id, Project.order("nr"), :tasks, :name_number, :id, :name, :include_blank => true

  %br.clear
  -if hour.new_record?
    = f.button :submit, :as => :image, :src => "images/accept.png"
  -else
    = f.button :submit, :label => 'update'
    = link_to "delete hour", hour, :confirm => 'Delete this hour?', :method => :delete

